(*  EBNF for doremi-script - This is for the clojure instaparse libarary *)
(* Grammar for AACM/Bhatkande style sargam/letter notation by John Rothfield 707 538-5133, cell 707 331-2700  rthfield@sonic.net *)

COMPOSITION (* a musical piece *)
  = SECTION ('\n' EMPTY_LINE2+  SECTION)*  EMPTY_LINE2*

SECTION = (ATTRIBUTE_SECTION | SARGAM_SECTION | LYRICS_SECTION) 


SARGAM_SECTION 
(* main line of music. multiple lines including syllables etc,delimited by empty line. There is an order, optional upper octave lines followed by main line of sargam followed by optional lyrics line *)
  =  (UPPER_OCTAVE_LINE "\n")*  SARGAM_LINE ('\n' (LYRICS_LINE | LOWER_OCTAVE_LINE))*


ATTRIBUTE_SECTION (* Header lines *)
= ATTRIBUTE_LINE ('\n' ATTRIBUTE_LINE)* 


LYRICS_SECTION (* verse,chorus,paragraph. Lines of lyrics *)
  = LYRICS_LINE ('\n' LYRICS_LINE)*

EMPTY_LINE2= WHITE_SPACE? '\n'  (* TODO *)


(************** Barlines **********************)
BARLINE  (* a musical barline or repeat *)
  = 
  REVERSE_FINAL_BARLINE  |
  FINAL_BARLINE  |
  DOUBLE_BARLINE  |
  LEFT_REPEAT  |
  RIGHT_REPEAT  |
  SINGLE_BARLINE 

REVERSE_FINAL_BARLINE  (* ie [|, a reverse final barline *)
  = '[' "|"

FINAL_BARLINE (* ie |], a final barline *)
  = '|' ']'

DOUBLE_BARLINE (* ie ||, a solid barline *)
  = '|' '|'

SINGLE_BARLINE (* ie | *)
  = '|' ! ('|' | ']' | ':')
LEFT_REPEAT (* ie |:  *)
  = '|' ':'

RIGHT_REPEAT (* ie :| *)
  = ':' '|'
	
(****   Pitches ************)	
	
FLAT_OR_SHARP = '#' | 'b'
(*  Letters SrRgGmMPdDnN in latin script  *)
  Sb  = 'S' 'b'
  Ssharp =    'S' '#'  
  Rsharp  =    'R' '#'  
  Gsharp  =    'G' '#'   
  Psharp  =    'P' '#'   
  Pb   =    'P' 'b'   
  Dsharp  =    'D' '#'   
  Nsharp   =    'N' '#'  
  Pb    =    'P' 'b'   
  S  =    'S' ! FLAT_OR_SHARP  
  r =    'r' ! FLAT_OR_SHARP  
  R  =    'R' ! FLAT_OR_SHARP  
  g =    'g' ! FLAT_OR_SHARP  
  G =    'G' ! FLAT_OR_SHARP  
  m =    'm' ! FLAT_OR_SHARP  
  M =    'M' ! FLAT_OR_SHARP  
  P =    'P' ! FLAT_OR_SHARP  
  d =    'd' ! FLAT_OR_SHARP  
  D =    'D' ! FLAT_OR_SHARP  
  n =    'n' ! FLAT_OR_SHARP  
  N =    'N' ! FLAT_OR_SHARP  

SARGAM_MUSICAL_CHAR  = 
    Sb |
    Ssharp |
    Rsharp |
    Gsharp |
    Psharp |
    Pb |
    Dsharp |
    Nsharp |
    Pb |
    S |
    r |
    R |
    g |
    G |
    m |
    M |
    P |
    d |
    D |
    n |
    N 
BEGIN_SLUR = '('
END_SLUR = ')'

SARGAM_PITCH = (* a sargam pitch ie SrR.. *)
     BEGIN_SLUR? SARGAM_MUSICAL_CHAR END_SLUR?  
		 
SPACE  (* space *)
  = ' '

WHITE_SPACE (* ONE OR MORE SPACES *)
=    #' +'   

BEGIN_BEAT_SYMBOL  (* symbol to use to indicate start of beat *)
  =   '<' 
END_BEAT_SYMBOL  (* Symbol to use to indicate end of beat *)
  =   '>'  

(* TODO *)
BEAT = BEAT_DELIMITED | !BEGIN_BEAT_SYMBOL BEAT_UNDELIMITED

BEAT_DELIMITED (* ie <S R G m> . Useful if lyrics wouldn't line up otherwise!. use Srgm> or S r g m> to group pithes into a single beat. The > delimiters correspond to the lower loop in the aacm notation system *)
  = BEGIN_BEAT_SYMBOL BEAT_DELIMITED_ITEM+ END_BEAT_SYMBOL

BEAT_DELIMITED_ITEM (* inside of a delimited beat, ie S--  R--  G- *)
  = BEAT_DELIMITED_SARGAM_PITCH_WITH_DASHES / SARGAM_PITCH / DASH / WHITE_SPACE

LINE_NUMBER (* ie 1) 2) 3) etc TODO: allow x)     *)
 = DIGITS  ')'  WHITE_SPACE?

DIGITS = (* One or more digits *)  #'\d+'

BEAT_DELIMITED_SARGAM_PITCH_WITH_DASHES (* <S  - - R >" *) = SARGAM_PITCH (WHITE_SPACE | DASH)+

DASH (* ie a -, used as a rhythmical placeholder. IE S--R--G- *)
   = '-'
REPEAT_SYMBOL = '%'

PITCH_WITH_DASHES (* for example 'S--'  *)
  = SARGAM_PITCH DASH+

BEAT_UNDELIMITED (* beats can be indicated by a group of pitches that consist only of pitches and dashes such as 'S--R--G-'   Can't contain spaces *)
  = BEAT_UNDELIMITED_ITEM+ 

BEAT_UNDELIMITED_ITEM (* inside of a simple beat, ie S--R--G- Note that undelimited beats cannot contain spaces *)
  = PITCH_WITH_DASHES / 
    SARGAM_PITCH / 
    DASH 

NON_BARLINE 
  =
    WHITE_SPACE /  
    BEAT 



MEASURE 
  = WHITE_SPACE* BEAT (WHITE_SPACE BEAT)*  WHITE_SPACE?

LINE_END (* eol or eof *)
(* TODO: was EOF or EOL *)
  =   EOL 

EOL = LINE_END_CHAR

LINE_END_CHAR= '\r' '\n' / '\r' / '\n'   (* review epsilon here *)




SARGAM_LINE_ITEM  (* an item in the main line *)
  = MEASURE /
    WHITE_SPACE /  
    BEAT_DELIMITED / 
    BEAT_UNDELIMITED / 
    SARGAM_PITCH / 
    DASH / 
    BARLINE / 
    REPEAT_SYMBOL 

EMPTY_LINE = WHITE_SPACE* LINE_END 


LYRICS_SEPARATOR= (" "+ | ("-" + " "*))
LYRICS_LINE (* line of syllables *)
  = " "* LYRICS_LINE_ITEM ( LYRICS_SEPARATOR LYRICS_LINE_ITEM)*  LYRICS_SEPARATOR* 

LYRICS_LINE_ITEM (* items in lyrics line, ie a word or a syllable. ie he-llo john gives 3 items, 3 syllables . Don't distinguish he- from john *)
  = SYLLABLE

HYPHENATED_SYLLABLE 
  = #"[a-zA-Z'!]+"  &"-" 
SYLLABLE (* for example he- or world *)
  = #"[a-zA-Z'!]+"





UPPER_OCTAVE_LINE (* can put upper octave dots or semicolons for upper upper octave (. or :). Also tala symbols +203   *)
  = WHITE_SPACE? UPPER_OCTAVE_LINE_ITEM+ 

UPPER_OCTAVE_LINE_ITEM2= #"([^\n\r\t ])+"

SARGAM_ORNAMENT (* in upper line NRSNS *)
  = SARGAM_ORNAMENT_ITEM+ 

SARGAM_ORNAMENT_ITEM
  = SARGAM_PITCH 

MORDENT = "~" 


ALTERNATE_ENDING_INDICATOR 
(*   1._______ 2.___ etc. The period is optional. Must have either dot or underscores. TODO: accepts 1_.___ which is not exactly what I want.  *)

= #"[1-3]"  #"[\._]+" 
UPPER_OCTAVE_LINE_ITEM (* Things above notes, including talas, octaves,chords, and 1st and second ending symbols *)
  = WHITE_SPACE | UPPER_OCTAVE_DOT | TALA | 
	    SARGAM_ORNAMENT | MORDENT | UPPER_UPPER_OCTAVE_SYMBOL | ALTERNATE_ENDING_INDICATOR 
	(*
     DELIMITED_SARGAM_ORNAMENT  / 
     WHITE_SPACE / 
     UPPER_OCTAVE_DOT /
     ALTERNATE_ENDING_INDICATOR /
     TALA /
     MORDENT /
     UPPER_UPPER_OCTAVE_SYMBOL /
     CHORD_SYMBOL /
     SARGAM_ORNAMENT  
   *)
UPPER_OCTAVE_DOT= DOT 

DOT = (*  Period and asterisk are allowed *)
  #"[\.*]"

UPPER_UPPER_OCTAVE_SYMBOL=":"

TALA (* tala markings. ie +203 for tintal. 012 for rupak *)
  = #"[+1203456]"

LOWER_OCTAVE_LINE (* can put lower octave dots or semicolons for lower-lower octave (. or :)   *)
  = WHITE_SPACE? LOWER_OCTAVE_LINE_ITEM+ WHITE_SPACE? 

LOWER_OCTAVE_LINE_ITEM  = "q"


LOWER_OCTAVE_LINE_ITEM =  WHITE_SPACE | LOWER_OCTAVE_DOT |
          LOWER_LOWER_OCTAVE_SYMBOL | KOMMAL_INDICATOR  

LOWER_OCTAVE_DOT= DOT
LOWER_LOWER_OCTAVE_SYMBOL=":"
KOMMAL_INDICATOR (* For the traditional bhatkande notation. for devanagri, indicates a flatted note, since devanagri seems not to have lowercase *)
 = "_"



ATTRIBUTE_LINE (* ie Author: John Rothfield *)
= KEY WHITE_SPACE?   ":" WHITE_SPACE? VALUE WHITE_SPACE?

KEY= (* ie Author *)  #"\w+"

VALUE=  (* Attribute value can have embedded spaces.  *)
(* Non-space followed by (spaces | non-space)*
#"[^\n\r ](( *)[^\n\r ])*"

SARGAM_LINE (* consists of optional line# at beginning of line, followed by 1 or more measures followed by line end *)
  = LINE_NUMBER?  WHITE_SPACE? BARLINE? MEASURE (BARLINE MEASURE)*  BARLINE? WHITE_SPACE?

